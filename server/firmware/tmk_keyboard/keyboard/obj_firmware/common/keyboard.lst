   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "../tmk_core/common/keyboard.c"
   1:../tmk_core/common/keyboard.c **** /*
   2:../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../tmk_core/common/keyboard.c **** 
   4:../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../tmk_core/common/keyboard.c **** 
   9:../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../tmk_core/common/keyboard.c **** 
  14:../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../tmk_core/common/keyboard.c **** */
  17:../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../tmk_core/common/keyboard.c **** #include "host.h"
  22:../tmk_core/common/keyboard.c **** #include "led.h"
  23:../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../tmk_core/common/keyboard.c **** #include "print.h"
  26:../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../tmk_core/common/keyboard.c **** #include "command.h"
  28:../tmk_core/common/keyboard.c **** #include "util.h"
  29:../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../tmk_core/common/keyboard.c **** #endif
  37:../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../tmk_core/common/keyboard.c **** #endif
  40:../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../tmk_core/common/keyboard.c **** #endif
  43:../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../tmk_core/common/keyboard.c **** #endif
  46:../tmk_core/common/keyboard.c **** 
  47:../tmk_core/common/keyboard.c **** 
  48:../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../tmk_core/common/keyboard.c **** {
  51:../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../tmk_core/common/keyboard.c ****         return false;
  55:../tmk_core/common/keyboard.c **** 
  56:../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../tmk_core/common/keyboard.c ****             return true;
  60:../tmk_core/common/keyboard.c ****     }
  61:../tmk_core/common/keyboard.c ****     return false;
  62:../tmk_core/common/keyboard.c **** }
  63:../tmk_core/common/keyboard.c **** #endif
  64:../tmk_core/common/keyboard.c **** 
  65:../tmk_core/common/keyboard.c **** 
  66:../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  16               		.loc 1 66 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE103:
  26               		.section	.text.keyboard_setup,"ax",@progbits
  27               	.global	keyboard_setup
  29               	keyboard_setup:
  30               	.LFB104:
  67:../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  68:../tmk_core/common/keyboard.c **** {
  31               		.loc 1 68 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  69:../tmk_core/common/keyboard.c ****     matrix_setup();
  37               		.loc 1 69 0
  38 0000 0C94 0000 		jmp matrix_setup
  39               	.LVL0:
  40               		.cfi_endproc
  41               	.LFE104:
  43               		.section	.text.keyboard_init,"ax",@progbits
  44               	.global	keyboard_init
  46               	keyboard_init:
  47               	.LFB105:
  70:../tmk_core/common/keyboard.c **** }
  71:../tmk_core/common/keyboard.c **** 
  72:../tmk_core/common/keyboard.c **** void keyboard_init(void)
  73:../tmk_core/common/keyboard.c **** {
  48               		.loc 1 73 0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  74:../tmk_core/common/keyboard.c ****     timer_init();
  54               		.loc 1 74 0
  55 0000 0E94 0000 		call timer_init
  56               	.LVL1:
  75:../tmk_core/common/keyboard.c ****     matrix_init();
  57               		.loc 1 75 0
  58 0004 0E94 0000 		call matrix_init
  59               	.LVL2:
  76:../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  77:../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  78:../tmk_core/common/keyboard.c **** #endif
  79:../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  80:../tmk_core/common/keyboard.c ****     serial_mouse_init();
  81:../tmk_core/common/keyboard.c **** #endif
  82:../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  83:../tmk_core/common/keyboard.c ****     adb_mouse_init();
  84:../tmk_core/common/keyboard.c **** #endif
  85:../tmk_core/common/keyboard.c **** 
  86:../tmk_core/common/keyboard.c **** 
  87:../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  88:../tmk_core/common/keyboard.c ****     bootmagic();
  60               		.loc 1 88 0
  61 0008 0C94 0000 		jmp bootmagic
  62               	.LVL3:
  63               		.cfi_endproc
  64               	.LFE105:
  66               		.section	.text.keyboard_task,"ax",@progbits
  67               	.global	keyboard_task
  69               	keyboard_task:
  70               	.LFB106:
  89:../tmk_core/common/keyboard.c **** #endif
  90:../tmk_core/common/keyboard.c **** 
  91:../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  92:../tmk_core/common/keyboard.c ****     backlight_init();
  93:../tmk_core/common/keyboard.c **** #endif
  94:../tmk_core/common/keyboard.c **** }
  95:../tmk_core/common/keyboard.c **** 
  96:../tmk_core/common/keyboard.c **** /*
  97:../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  98:../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  99:../tmk_core/common/keyboard.c ****  */
 100:../tmk_core/common/keyboard.c **** void keyboard_task(void)
 101:../tmk_core/common/keyboard.c **** {
  71               		.loc 1 101 0
  72               		.cfi_startproc
  73 0000 4F92      		push r4
  74               	.LCFI0:
  75               		.cfi_def_cfa_offset 3
  76               		.cfi_offset 4, -2
  77 0002 5F92      		push r5
  78               	.LCFI1:
  79               		.cfi_def_cfa_offset 4
  80               		.cfi_offset 5, -3
  81 0004 7F92      		push r7
  82               	.LCFI2:
  83               		.cfi_def_cfa_offset 5
  84               		.cfi_offset 7, -4
  85 0006 8F92      		push r8
  86               	.LCFI3:
  87               		.cfi_def_cfa_offset 6
  88               		.cfi_offset 8, -5
  89 0008 9F92      		push r9
  90               	.LCFI4:
  91               		.cfi_def_cfa_offset 7
  92               		.cfi_offset 9, -6
  93 000a AF92      		push r10
  94               	.LCFI5:
  95               		.cfi_def_cfa_offset 8
  96               		.cfi_offset 10, -7
  97 000c BF92      		push r11
  98               	.LCFI6:
  99               		.cfi_def_cfa_offset 9
 100               		.cfi_offset 11, -8
 101 000e CF92      		push r12
 102               	.LCFI7:
 103               		.cfi_def_cfa_offset 10
 104               		.cfi_offset 12, -9
 105 0010 DF92      		push r13
 106               	.LCFI8:
 107               		.cfi_def_cfa_offset 11
 108               		.cfi_offset 13, -10
 109 0012 EF92      		push r14
 110               	.LCFI9:
 111               		.cfi_def_cfa_offset 12
 112               		.cfi_offset 14, -11
 113 0014 FF92      		push r15
 114               	.LCFI10:
 115               		.cfi_def_cfa_offset 13
 116               		.cfi_offset 15, -12
 117 0016 0F93      		push r16
 118               	.LCFI11:
 119               		.cfi_def_cfa_offset 14
 120               		.cfi_offset 16, -13
 121 0018 1F93      		push r17
 122               	.LCFI12:
 123               		.cfi_def_cfa_offset 15
 124               		.cfi_offset 17, -14
 125 001a CF93      		push r28
 126               	.LCFI13:
 127               		.cfi_def_cfa_offset 16
 128               		.cfi_offset 28, -15
 129 001c DF93      		push r29
 130               	.LCFI14:
 131               		.cfi_def_cfa_offset 17
 132               		.cfi_offset 29, -16
 133 001e 00D0      		rcall .
 134 0020 00D0      		rcall .
 135 0022 1F92      		push __zero_reg__
 136               	.LCFI15:
 137               		.cfi_def_cfa_offset 22
 138 0024 CDB7      		in r28,__SP_L__
 139 0026 DEB7      		in r29,__SP_H__
 140               	.LCFI16:
 141               		.cfi_def_cfa_register 28
 142               	/* prologue: function */
 143               	/* frame size = 5 */
 144               	/* stack size = 20 */
 145               	.L__stack_usage = 20
 146               	.LVL4:
 102:../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 103:../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 104:../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 105:../tmk_core/common/keyboard.c **** #endif
 106:../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 107:../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 108:../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 109:../tmk_core/common/keyboard.c **** 
 110:../tmk_core/common/keyboard.c ****     matrix_scan();
 147               		.loc 1 110 0
 148 0028 0E94 0000 		call matrix_scan
 149               	.LVL5:
 150 002c 90E0      		ldi r25,lo8(matrix_prev.4840)
 151 002e C92E      		mov r12,r25
 152 0030 90E0      		ldi r25,hi8(matrix_prev.4840)
 153 0032 D92E      		mov r13,r25
 154 0034 00E0      		ldi r16,0
 155 0036 10E0      		ldi r17,0
 156               	.LBB2:
 157               	.LBB3:
 111:../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 112:../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 113:../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 114:../tmk_core/common/keyboard.c ****         if (matrix_change) {
 115:../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 116:../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 117:../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 118:../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 119:../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 120:../tmk_core/common/keyboard.c ****                  */
 121:../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 122:../tmk_core/common/keyboard.c ****                     matrix_print();
 123:../tmk_core/common/keyboard.c ****                 }
 124:../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 125:../tmk_core/common/keyboard.c ****                 continue;
 126:../tmk_core/common/keyboard.c ****             }
 127:../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 128:../tmk_core/common/keyboard.c **** #endif
 129:../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 130:../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 131:../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 158               		.loc 1 131 0
 159 0038 AA24      		clr r10
 160 003a A394      		inc r10
 161 003c B12C      		mov r11,__zero_reg__
 162               	.LVL6:
 163               	.L6:
 164 003e 702E      		mov r7,r16
 165               	.LVL7:
 166               	.LBE3:
 112:../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 167               		.loc 1 112 0
 168 0040 802F      		mov r24,r16
 169 0042 0E94 0000 		call matrix_get_row
 170               	.LVL8:
 171 0046 4C01      		movw r8,r24
 172               	.LVL9:
 113:../tmk_core/common/keyboard.c ****         if (matrix_change) {
 173               		.loc 1 113 0
 174 0048 F601      		movw r30,r12
 175 004a 4190      		ld r4,Z+
 176 004c 5190      		ld r5,Z+
 177 004e 6F01      		movw r12,r30
 178 0050 4826      		eor r4,r24
 179 0052 5926      		eor r5,r25
 180               	.LVL10:
 114:../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 181               		.loc 1 114 0
 182 0054 4114      		cp r4,__zero_reg__
 183 0056 5104      		cpc r5,__zero_reg__
 184 0058 01F4      		brne .L5
 185               	.L13:
 186               	.LVL11:
 187 005a 0F5F      		subi r16,-1
 188 005c 1F4F      		sbci r17,-1
 189               	.LVL12:
 111:../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 190               		.loc 1 111 0
 191 005e 0530      		cpi r16,5
 192 0060 1105      		cpc r17,__zero_reg__
 193 0062 01F4      		brne .L6
 194               	.LBE2:
 132:../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 133:../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 134:../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 135:../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 136:../tmk_core/common/keyboard.c ****                     };
 137:../tmk_core/common/keyboard.c ****                     action_exec(e);
 138:../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 139:../tmk_core/common/keyboard.c ****                     // record a processed key
 140:../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 141:../tmk_core/common/keyboard.c ****                     // process a key per task call
 142:../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 143:../tmk_core/common/keyboard.c ****                 }
 144:../tmk_core/common/keyboard.c ****             }
 145:../tmk_core/common/keyboard.c ****         }
 146:../tmk_core/common/keyboard.c ****     }
 147:../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 148:../tmk_core/common/keyboard.c ****     action_exec(TICK);
 195               		.loc 1 148 0
 196 0064 8FEF      		ldi r24,lo8(-1)
 197 0066 8983      		std Y+1,r24
 198 0068 8A83      		std Y+2,r24
 199 006a 1B82      		std Y+3,__zero_reg__
 200 006c 0E94 0000 		call timer_read
 201               	.LVL13:
 202 0070 8160      		ori r24,1
 203 0072 782F      		mov r23,r24
 204 0074 9D83      		std Y+5,r25
 205 0076 8C83      		std Y+4,r24
 206 0078 4981      		ldd r20,Y+1
 207 007a 5A81      		ldd r21,Y+2
 208 007c 6B81      		ldd r22,Y+3
 209 007e 8D81      		ldd r24,Y+5
 210 0080 0E94 0000 		call action_exec
 211               	.LVL14:
 212 0084 00C0      		rjmp .L11
 213               	.L5:
 214               	.LBB6:
 129:../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 215               		.loc 1 129 0
 216 0086 8091 0000 		lds r24,debug_config
 217 008a 81FD      		sbrc r24,1
 129:../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 218               		.loc 1 129 0 is_stmt 0 discriminator 1
 219 008c 0E94 0000 		call matrix_print
 220               	.LVL15:
 221               	.L8:
 222               	.LBE6:
 110:../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 223               		.loc 1 110 0 is_stmt 1
 224 0090 20E0      		ldi r18,0
 225 0092 30E0      		ldi r19,0
 226               	.LVL16:
 227               	.L12:
 228               	.LBB7:
 229               	.LBB5:
 131:../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 230               		.loc 1 131 0
 231 0094 7501      		movw r14,r10
 232 0096 022E      		mov r0,r18
 233 0098 00C0      		rjmp 2f
 234               		1:
 235 009a EE0C      		lsl r14
 236 009c FF1C      		rol r15
 237               		2:
 238 009e 0A94      		dec r0
 239 00a0 02F4      		brpl 1b
 240 00a2 C701      		movw r24,r14
 241 00a4 8421      		and r24,r4
 242 00a6 9521      		and r25,r5
 243 00a8 892B      		or r24,r25
 244 00aa 01F0      		breq .L9
 245               	.LBB4:
 132:../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 246               		.loc 1 132 0
 247 00ac 2983      		std Y+1,r18
 248 00ae 7A82      		std Y+2,r7
 134:../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 249               		.loc 1 134 0
 250 00b0 8E20      		and r8,r14
 251 00b2 9F20      		and r9,r15
 252               	.LVL17:
 253 00b4 91E0      		ldi r25,lo8(1)
 254 00b6 8928      		or r8,r9
 255 00b8 01F4      		brne .L10
 256 00ba 90E0      		ldi r25,0
 257               	.L10:
 132:../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 258               		.loc 1 132 0
 259 00bc 9B83      		std Y+3,r25
 135:../tmk_core/common/keyboard.c ****                     };
 260               		.loc 1 135 0
 261 00be 0E94 0000 		call timer_read
 262               	.LVL18:
 263 00c2 8160      		ori r24,1
 132:../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 264               		.loc 1 132 0
 265 00c4 782F      		mov r23,r24
 266 00c6 9D83      		std Y+5,r25
 267 00c8 8C83      		std Y+4,r24
 137:../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 268               		.loc 1 137 0
 269 00ca 4981      		ldd r20,Y+1
 270 00cc 5A81      		ldd r21,Y+2
 271 00ce 6B81      		ldd r22,Y+3
 272 00d0 8D81      		ldd r24,Y+5
 273 00d2 0E94 0000 		call action_exec
 274               	.LVL19:
 138:../tmk_core/common/keyboard.c ****                     // record a processed key
 275               		.loc 1 138 0
 276 00d6 4981      		ldd r20,Y+1
 277 00d8 5A81      		ldd r21,Y+2
 278 00da 6B81      		ldd r22,Y+3
 279 00dc 7C81      		ldd r23,Y+4
 280 00de 8D81      		ldd r24,Y+5
 281 00e0 0E94 0000 		call hook_matrix_change
 282               	.LVL20:
 140:../tmk_core/common/keyboard.c ****                     // process a key per task call
 283               		.loc 1 140 0
 284 00e4 000F      		lsl r16
 285 00e6 111F      		rol r17
 286               	.LVL21:
 287 00e8 F801      		movw r30,r16
 288 00ea E050      		subi r30,lo8(-(matrix_prev.4840))
 289 00ec F040      		sbci r31,hi8(-(matrix_prev.4840))
 290 00ee 8081      		ld r24,Z
 291 00f0 9181      		ldd r25,Z+1
 292 00f2 E826      		eor r14,r24
 293 00f4 F926      		eor r15,r25
 294 00f6 F182      		std Z+1,r15
 295 00f8 E082      		st Z,r14
 296 00fa 00C0      		rjmp .L11
 297               	.LVL22:
 298               	.L9:
 299 00fc 2F5F      		subi r18,-1
 300 00fe 3F4F      		sbci r19,-1
 301               	.LVL23:
 302               	.LBE4:
 130:../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 303               		.loc 1 130 0 discriminator 2
 304 0100 2E30      		cpi r18,14
 305 0102 3105      		cpc r19,__zero_reg__
 306 0104 01F4      		brne .L12
 307 0106 00C0      		rjmp .L13
 308               	.LVL24:
 309               	.L11:
 310               	.LBE5:
 311               	.LBE7:
 149:../tmk_core/common/keyboard.c **** 
 150:../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 151:../tmk_core/common/keyboard.c **** 
 152:../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 312               		.loc 1 152 0
 313 0108 0E94 0000 		call hook_keyboard_loop
 314               	.LVL25:
 153:../tmk_core/common/keyboard.c **** 
 154:../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 155:../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 156:../tmk_core/common/keyboard.c ****     mousekey_task();
 315               		.loc 1 156 0
 316 010c 0E94 0000 		call mousekey_task
 317               	.LVL26:
 157:../tmk_core/common/keyboard.c **** #endif
 158:../tmk_core/common/keyboard.c **** 
 159:../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 160:../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 161:../tmk_core/common/keyboard.c **** #endif
 162:../tmk_core/common/keyboard.c **** 
 163:../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 164:../tmk_core/common/keyboard.c ****         serial_mouse_task();
 165:../tmk_core/common/keyboard.c **** #endif
 166:../tmk_core/common/keyboard.c **** 
 167:../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 168:../tmk_core/common/keyboard.c ****         adb_mouse_task();
 169:../tmk_core/common/keyboard.c **** #endif
 170:../tmk_core/common/keyboard.c **** 
 171:../tmk_core/common/keyboard.c ****     // update LED
 172:../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 318               		.loc 1 172 0
 319 0110 1091 0000 		lds r17,led_status.4841
 320 0114 0E94 0000 		call host_keyboard_leds
 321               	.LVL27:
 322 0118 1817      		cp r17,r24
 323 011a 01F0      		breq .L4
 173:../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 324               		.loc 1 173 0
 325 011c 0E94 0000 		call host_keyboard_leds
 326               	.LVL28:
 327 0120 8093 0000 		sts led_status.4841,r24
 174:../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 328               		.loc 1 174 0
 329 0124 9091 0000 		lds r25,debug_config
 330 0128 92FF      		sbrs r25,2
 331 012a 00C0      		rjmp .L15
 332               		.loc 1 174 0 is_stmt 0 discriminator 1
 333 012c 90FF      		sbrs r25,0
 334 012e 00C0      		rjmp .L15
 335               		.loc 1 174 0 discriminator 2
 336 0130 1F92      		push __zero_reg__
 337 0132 8F93      		push r24
 338 0134 80E0      		ldi r24,lo8(__c.4858)
 339 0136 90E0      		ldi r25,hi8(__c.4858)
 340 0138 9F93      		push r25
 341 013a 8F93      		push r24
 342 013c 0E94 0000 		call __xprintf
 343               	.LVL29:
 344 0140 0F90      		pop __tmp_reg__
 345 0142 0F90      		pop __tmp_reg__
 346 0144 0F90      		pop __tmp_reg__
 347 0146 0F90      		pop __tmp_reg__
 348               	.L15:
 175:../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 349               		.loc 1 175 0 is_stmt 1
 350 0148 8091 0000 		lds r24,led_status.4841
 351               	/* epilogue start */
 176:../tmk_core/common/keyboard.c ****     }
 177:../tmk_core/common/keyboard.c **** }
 352               		.loc 1 177 0
 353 014c 0F90      		pop __tmp_reg__
 354 014e 0F90      		pop __tmp_reg__
 355 0150 0F90      		pop __tmp_reg__
 356 0152 0F90      		pop __tmp_reg__
 357 0154 0F90      		pop __tmp_reg__
 358 0156 DF91      		pop r29
 359 0158 CF91      		pop r28
 360 015a 1F91      		pop r17
 361 015c 0F91      		pop r16
 362 015e FF90      		pop r15
 363 0160 EF90      		pop r14
 364 0162 DF90      		pop r13
 365 0164 CF90      		pop r12
 366 0166 BF90      		pop r11
 367 0168 AF90      		pop r10
 368 016a 9F90      		pop r9
 369 016c 8F90      		pop r8
 370 016e 7F90      		pop r7
 371 0170 5F90      		pop r5
 372 0172 4F90      		pop r4
 373               	.LVL30:
 175:../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 374               		.loc 1 175 0
 375 0174 0C94 0000 		jmp hook_keyboard_leds_change
 376               	.LVL31:
 377               	.L4:
 378               	/* epilogue start */
 379               		.loc 1 177 0
 380 0178 0F90      		pop __tmp_reg__
 381 017a 0F90      		pop __tmp_reg__
 382 017c 0F90      		pop __tmp_reg__
 383 017e 0F90      		pop __tmp_reg__
 384 0180 0F90      		pop __tmp_reg__
 385 0182 DF91      		pop r29
 386 0184 CF91      		pop r28
 387 0186 1F91      		pop r17
 388 0188 0F91      		pop r16
 389 018a FF90      		pop r15
 390 018c EF90      		pop r14
 391 018e DF90      		pop r13
 392 0190 CF90      		pop r12
 393 0192 BF90      		pop r11
 394 0194 AF90      		pop r10
 395 0196 9F90      		pop r9
 396 0198 8F90      		pop r8
 397 019a 7F90      		pop r7
 398 019c 5F90      		pop r5
 399 019e 4F90      		pop r4
 400               	.LVL32:
 401 01a0 0895      		ret
 402               		.cfi_endproc
 403               	.LFE106:
 405               		.section	.text.keyboard_set_leds,"ax",@progbits
 406               	.global	keyboard_set_leds
 408               	keyboard_set_leds:
 409               	.LFB107:
 178:../tmk_core/common/keyboard.c **** 
 179:../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 180:../tmk_core/common/keyboard.c **** {
 410               		.loc 1 180 0
 411               		.cfi_startproc
 412               	.LVL33:
 413               	/* prologue: function */
 414               	/* frame size = 0 */
 415               	/* stack size = 0 */
 416               	.L__stack_usage = 0
 181:../tmk_core/common/keyboard.c ****     led_set(leds);
 417               		.loc 1 181 0
 418 0000 0C94 0000 		jmp led_set
 419               	.LVL34:
 420               		.cfi_endproc
 421               	.LFE107:
 423               		.section	.progmem.data.__c.4858,"a",@progbits
 426               	__c.4858:
 427 0000 4C45 443A 		.string	"LED: %02X\n"
 427      2025 3032 
 427      580A 00
 428               		.section	.bss.led_status.4841,"aw",@nobits
 431               	led_status.4841:
 432 0000 00        		.zero	1
 433               		.section	.bss.matrix_prev.4840,"aw",@nobits
 436               	matrix_prev.4840:
 437 0000 0000 0000 		.zero	10
 437      0000 0000 
 437      0000 
 438               		.text
 439               	.Letext0:
 440               		.file 2 "/usr/local/Cellar/avr-gcc/4.9.3/avr/include/stdint.h"
 441               		.file 3 "../tmk_core/common/keyboard.h"
 442               		.file 4 "../tmk_core/common/matrix.h"
 443               		.file 5 "../tmk_core/common/debug.h"
 444               		.file 6 "../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 445               		.file 7 "../tmk_core/common/timer.h"
 446               		.file 8 "../tmk_core/common/bootmagic.h"
 447               		.file 9 "../tmk_core/common/action.h"
 448               		.file 10 "../tmk_core/common/hook.h"
 449               		.file 11 "../tmk_core/common/mousekey.h"
 450               		.file 12 "../tmk_core/common/host.h"
 451               		.file 13 "../tmk_core/common/avr/xprintf.h"
 452               		.file 14 "../tmk_core/common/led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:4      *ABS*:000000000000003f __SREG__
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:13     .text.matrix_setup:0000000000000000 matrix_setup
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:29     .text.keyboard_setup:0000000000000000 keyboard_setup
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:46     .text.keyboard_init:0000000000000000 keyboard_init
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:69     .text.keyboard_task:0000000000000000 keyboard_task
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:436    .bss.matrix_prev.4840:0000000000000000 matrix_prev.4840
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:431    .bss.led_status.4841:0000000000000000 led_status.4841
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:426    .progmem.data.__c.4858:0000000000000000 __c.4858
/var/folders/w_/62ddyc51061dt7n8j2r43p_c0000gn/T//cc2dqbQh.s:408    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
timer_read
action_exec
debug_config
matrix_print
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
